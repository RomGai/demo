1. 使用方法：
直接运行pipeline_chatgpt_nodepth.py，在开始运行的五秒内需要打开游戏界面。
推荐先把角色跑到一个树林里再运行，因为目前的pipeline写的还很粗糙，这只是这两天写的一个draft，问题肯定还有很多。
运行时出现“远程主机强迫关闭了一个现有的连接”这个报错很正常，是因为目标检测api的问题，需要多试几次。如果在执行了几个步骤后突然出现这个报错导致中断，处理方法参考4.②。
这个是导致目前运行比较麻烦的最主要原因。要解决这个问题需要在本地部署检测模型，但我目前使用的模型没有开源。

2.游戏设置
游戏版本Minecraft 1.11.2
使用win10系统默认UI布局，显示器分辨率为1920x1080，使MC为窗口模式并放大窗口。
MC不能是全屏模式，会造成截图冲突。
游戏内设置：视场FOV=90，鼠标灵敏度74%
我的鼠标dpi是2400，但dpi应该没有影响。

3.前置条件
①在放.py的路径下先创建个空文件夹叫"log_temp"
②Requirements：
inference-sdk
pygetwindow
pyautogui
openai
③OpenAI的API，用于访问chatGPT。由于中国大陆无法访问OpenAI，因此需要使用中转服务商。我用的是https://www.apiyi.com/token。
pipeline_chatgpt_nodepth.py的第17行输入该API。
④目标检测模型的API。我找了一个检测MC-style树木的模型（yolo），但无法下载到本地，需要使用api来访问。这个api是免费的。https://app.roboflow.com/ → Settings → API keys →Private API Key
pipeline_detection.py的第12行输入该API。
⑤电脑不能挂VPN，否则无法访问OpenAI和目标检测模型的源。
⑥运行pipeline_chatgpt_nodepth.py用CPU就行。但运行pipeline_chatgpt_withdepth.py需要CUDA，因为有深度估计部分。
由于不同场景得到的深度图的数值关系不一致，深度估计被我暂时舍弃了，pipeline_chatgpt_withdepth.py是个废案。

4.注意事项
①目标检测模型的API用起来老是连接中断，可能和限流还有国内网络环境有关系。我使用了time.sleep(30)来缓解限流问题，因此每次执行需要等很久。
②重要：如果目标检测的时候发生了中断（远程主机强迫关闭了一个现有的连接），需要记录下中断前最后一次的行为决策，并将该决策复制给pipeline_chatgpt_nodepth.py第20行的last_decision变量。
然后，重新运行代码即可。这个过程中保持游戏画面不要变动。
另外，建议在重新运行代码前复制备份一下log_temp这个文件夹，因为再次运行代码的时候的时候文件命名会重复，可能会导致之前的记录被覆盖。
③运行时间会比较久，请耐心等待。需要快速和稳定的运行的话得本地有所需要的目标检测模型。
④测试的次数还不够多，缺陷和不稳定的情况一定会有，但目前还没有统计出来具体的规律。
⑤目前输入chatGPT的只有文本，版本为4o。基本的决策暂时还不需要用到多模态模型。
⑥没有在雨天和夜晚测试，可以在下雨时使用/weather clear，在快天黑时使用/time add 12000。